{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"H:\\\\sss\\\\React\\\\portfolio\\\\material-ui-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"H:\\\\sss\\\\React\\\\portfolio\\\\material-ui-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\n\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\n\nvar EmitterInstance = /*#__PURE__*/function () {\n  function EmitterInstance(emitters, container, emitterOptions, position) {\n    _classCallCheck(this, EmitterInstance);\n\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g;\n\n    this.emitters = emitters;\n    this.container = container;\n    this.firstSpawn = true;\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.deepExtend({}, emitterOptions);\n    this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = emitterOptions.name;\n    var particlesOptions = Utils_1.deepExtend({}, this.emitterOptions.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.emitterOptions.direction;\n\n    if (this.emitterOptions.spawnColor !== undefined) {\n      this.spawnColor = Utils_1.colorToHsl(this.emitterOptions.spawnColor);\n    }\n\n    this.paused = !this.emitterOptions.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : function () {\n      var size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    }();\n    this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  _createClass(EmitterInstance, [{\n    key: \"externalPlay\",\n    value: function externalPlay() {\n      this.paused = false;\n      this.play();\n    }\n  }, {\n    key: \"externalPause\",\n    value: function externalPause() {\n      this.paused = true;\n      this.pause();\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (this.paused) {\n        return;\n      }\n\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n        if (this.emitDelay === undefined) {\n          var delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n          this.emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.prepareToDie();\n        }\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.paused) {\n        return;\n      }\n\n      delete this.emitDelay;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _a, _b, _c;\n\n      if (this.paused) {\n        return;\n      }\n\n      if (this.firstSpawn) {\n        this.firstSpawn = false;\n        this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n        this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n        delta.value = 0;\n      }\n\n      if (this.duration !== undefined) {\n        this.currentDuration += delta.value;\n\n        if (this.currentDuration >= this.duration) {\n          this.pause();\n\n          if (this.spawnDelay !== undefined) {\n            delete this.spawnDelay;\n          }\n\n          if (!this.immortal) {\n            this.lifeCount--;\n          }\n\n          if (this.lifeCount > 0 || this.immortal) {\n            this.position = this.calcPosition();\n            this.spawnDelay = ((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n          } else {\n            this.destroy();\n          }\n\n          this.currentDuration -= this.duration;\n          delete this.duration;\n        }\n      }\n\n      if (this.spawnDelay !== undefined) {\n        this.currentSpawnDelay += delta.value;\n\n        if (this.currentSpawnDelay >= this.spawnDelay) {\n          this.play();\n          this.currentSpawnDelay -= this.currentSpawnDelay;\n          delete this.spawnDelay;\n        }\n      }\n\n      if (this.emitDelay !== undefined) {\n        this.currentEmitDelay += delta.value;\n\n        if (this.currentEmitDelay >= this.emitDelay) {\n          this.emit();\n          this.currentEmitDelay -= this.emitDelay;\n        }\n      }\n    }\n  }, {\n    key: \"prepareToDie\",\n    value: function prepareToDie() {\n      var _a;\n\n      if (this.paused) {\n        return;\n      }\n\n      var duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n        this.duration = duration * 1000;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.emitters.removeEmitter(this);\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var _a, _b;\n\n      var container = this.container;\n      var percentPosition = this.emitterOptions.position;\n      return {\n        x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n        y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n      };\n    }\n  }, {\n    key: \"emit\",\n    value: function emit() {\n      var _a;\n\n      if (this.paused) {\n        return;\n      }\n\n      var container = this.container;\n      var position = this.position;\n      var offset = {\n        x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n        y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n      };\n      var quantity = Utils_1.getRangeValue(this.emitterOptions.rate.quantity);\n\n      for (var i = 0; i < quantity; i++) {\n        var particlesOptions = Utils_1.deepExtend({}, this.particlesOptions);\n\n        if (this.spawnColor !== undefined) {\n          var colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n          if (colorAnimation) {\n            var hueAnimation = colorAnimation;\n\n            if (hueAnimation.enable) {\n              this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n            } else {\n              var hslAnimation = colorAnimation;\n              this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n              this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n              this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n            }\n          }\n\n          if (!particlesOptions.color) {\n            particlesOptions.color = {\n              value: this.spawnColor\n            };\n          } else {\n            particlesOptions.color.value = this.spawnColor;\n          }\n        }\n\n        container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n      }\n    }\n  }, {\n    key: \"setColorAnimation\",\n    value: function setColorAnimation(animation, initValue, maxValue) {\n      var _a;\n\n      var container = this.container;\n\n      if (!animation.enable) {\n        return initValue;\n      }\n\n      var colorOffset = Utils_1.randomInRange(animation.offset);\n      var delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\n      var emitFactor = 1000 * delay / container.retina.reduceFactor;\n      var colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n      return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n  }]);\n\n  return EmitterInstance;\n}();\n\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"sources":["H:/sss/React/portfolio/material-ui-portfolio-master/node_modules/tsparticles/Plugins/Emitters/EmitterInstance.js"],"names":["Object","defineProperty","exports","value","EmitterInstance","Utils_1","require","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","emitters","container","emitterOptions","_a","_b","_c","_d","_e","_f","_g","firstSpawn","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","deepExtend","spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","particlesOptions","particles","move","direction","spawnColor","undefined","colorToHsl","paused","autoPlay","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","count","immortal","play","pause","emitDelay","getRangeValue","rate","prepareToDie","isPointInside","canvas","delta","duration","destroy","emit","removeEmitter","percentPosition","quantity","i","colorAnimation","animation","hueAnimation","enable","h","setColorAnimation","hslAnimation","s","l","color","addParticle","initValue","maxValue","colorOffset","randomInRange","emitFactor","colorSpeed","speed","fpsLimit"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EmitterInstance = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nconst Enums_1 = require(\"../../Enums\");\r\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\r\nfunction randomCoordinate(position, offset) {\r\n    return position + offset * (Math.random() - 0.5);\r\n}\r\nfunction randomPosition(position, offset) {\r\n    return {\r\n        x: randomCoordinate(position.x, offset.x),\r\n        y: randomCoordinate(position.y, offset.y),\r\n    };\r\n}\r\nclass EmitterInstance {\r\n    constructor(emitters, container, emitterOptions, position) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var _g;\r\n        this.emitters = emitters;\r\n        this.container = container;\r\n        this.firstSpawn = true;\r\n        this.currentDuration = 0;\r\n        this.currentEmitDelay = 0;\r\n        this.currentSpawnDelay = 0;\r\n        this.initialPosition = position;\r\n        this.emitterOptions = Utils_1.deepExtend({}, emitterOptions);\r\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\r\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\r\n        this.name = emitterOptions.name;\r\n        let particlesOptions = Utils_1.deepExtend({}, this.emitterOptions.particles);\r\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\r\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\r\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.emitterOptions.direction);\r\n        if (this.emitterOptions.spawnColor !== undefined) {\r\n            this.spawnColor = Utils_1.colorToHsl(this.emitterOptions.spawnColor);\r\n        }\r\n        this.paused = !this.emitterOptions.autoPlay;\r\n        this.particlesOptions = particlesOptions;\r\n        this.size =\r\n            (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\r\n                const size = new EmitterSize_1.EmitterSize();\r\n                size.load({\r\n                    height: 0,\r\n                    mode: Enums_1.SizeMode.percent,\r\n                    width: 0,\r\n                });\r\n                return size;\r\n            })();\r\n        this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\r\n        this.immortal = this.lifeCount <= 0;\r\n        this.play();\r\n    }\r\n    externalPlay() {\r\n        this.paused = false;\r\n        this.play();\r\n    }\r\n    externalPause() {\r\n        this.paused = true;\r\n        this.pause();\r\n    }\r\n    play() {\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        if (this.container.retina.reduceFactor &&\r\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\r\n            if (this.emitDelay === undefined) {\r\n                const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\r\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\r\n            }\r\n            if (this.lifeCount > 0 || this.immortal) {\r\n                this.prepareToDie();\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        delete this.emitDelay;\r\n    }\r\n    resize() {\r\n        const initialPosition = this.initialPosition;\r\n        this.position =\r\n            initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size)\r\n                ? initialPosition\r\n                : this.calcPosition();\r\n    }\r\n    update(delta) {\r\n        var _a, _b, _c;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        if (this.firstSpawn) {\r\n            this.firstSpawn = false;\r\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\r\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\r\n            delta.value = 0;\r\n        }\r\n        if (this.duration !== undefined) {\r\n            this.currentDuration += delta.value;\r\n            if (this.currentDuration >= this.duration) {\r\n                this.pause();\r\n                if (this.spawnDelay !== undefined) {\r\n                    delete this.spawnDelay;\r\n                }\r\n                if (!this.immortal) {\r\n                    this.lifeCount--;\r\n                }\r\n                if (this.lifeCount > 0 || this.immortal) {\r\n                    this.position = this.calcPosition();\r\n                    this.spawnDelay =\r\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\r\n                }\r\n                else {\r\n                    this.destroy();\r\n                }\r\n                this.currentDuration -= this.duration;\r\n                delete this.duration;\r\n            }\r\n        }\r\n        if (this.spawnDelay !== undefined) {\r\n            this.currentSpawnDelay += delta.value;\r\n            if (this.currentSpawnDelay >= this.spawnDelay) {\r\n                this.play();\r\n                this.currentSpawnDelay -= this.currentSpawnDelay;\r\n                delete this.spawnDelay;\r\n            }\r\n        }\r\n        if (this.emitDelay !== undefined) {\r\n            this.currentEmitDelay += delta.value;\r\n            if (this.currentEmitDelay >= this.emitDelay) {\r\n                this.emit();\r\n                this.currentEmitDelay -= this.emitDelay;\r\n            }\r\n        }\r\n    }\r\n    prepareToDie() {\r\n        var _a;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\r\n        if (this.container.retina.reduceFactor &&\r\n            (this.lifeCount > 0 || this.immortal) &&\r\n            duration !== undefined &&\r\n            duration > 0) {\r\n            this.duration = duration * 1000;\r\n        }\r\n    }\r\n    destroy() {\r\n        this.emitters.removeEmitter(this);\r\n    }\r\n    calcPosition() {\r\n        var _a, _b;\r\n        const container = this.container;\r\n        const percentPosition = this.emitterOptions.position;\r\n        return {\r\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\r\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\r\n        };\r\n    }\r\n    emit() {\r\n        var _a;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        const position = this.position;\r\n        const offset = {\r\n            x: this.size.mode === Enums_1.SizeMode.percent\r\n                ? (container.canvas.size.width * this.size.width) / 100\r\n                : this.size.width,\r\n            y: this.size.mode === Enums_1.SizeMode.percent\r\n                ? (container.canvas.size.height * this.size.height) / 100\r\n                : this.size.height,\r\n        };\r\n        const quantity = Utils_1.getRangeValue(this.emitterOptions.rate.quantity);\r\n        for (let i = 0; i < quantity; i++) {\r\n            const particlesOptions = Utils_1.deepExtend({}, this.particlesOptions);\r\n            if (this.spawnColor !== undefined) {\r\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\r\n                if (colorAnimation) {\r\n                    const hueAnimation = colorAnimation;\r\n                    if (hueAnimation.enable) {\r\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\r\n                    }\r\n                    else {\r\n                        const hslAnimation = colorAnimation;\r\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\r\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\r\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\r\n                    }\r\n                }\r\n                if (!particlesOptions.color) {\r\n                    particlesOptions.color = {\r\n                        value: this.spawnColor,\r\n                    };\r\n                }\r\n                else {\r\n                    particlesOptions.color.value = this.spawnColor;\r\n                }\r\n            }\r\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\r\n        }\r\n    }\r\n    setColorAnimation(animation, initValue, maxValue) {\r\n        var _a;\r\n        const container = this.container;\r\n        if (!animation.enable) {\r\n            return initValue;\r\n        }\r\n        const colorOffset = Utils_1.randomInRange(animation.offset);\r\n        const delay = Utils_1.getRangeValue(this.emitterOptions.rate.delay);\r\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\r\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\r\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\r\n    }\r\n}\r\nexports.EmitterInstance = EmitterInstance;\r\n"]},"metadata":{},"sourceType":"script"}