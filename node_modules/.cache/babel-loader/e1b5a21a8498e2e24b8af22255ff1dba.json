{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"H:\\\\sss\\\\React\\\\portfolio\\\\material-ui-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"H:\\\\sss\\\\React\\\\portfolio\\\\material-ui-portfolio-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WobbleUpdater = void 0;\n\nfunction updateWobble(particle, delta) {\n  var wobble = particle.options.wobble;\n  var speed = particle.wobbleSpeed * delta.factor;\n  var distance = particle.wobbleDistance * delta.factor / (1000 / 60);\n  var max = 2 * Math.PI;\n\n  if (!wobble.enable) {\n    return;\n  }\n\n  particle.wobbleAngle += speed;\n\n  if (particle.wobbleAngle > max) {\n    particle.wobbleAngle -= max;\n  }\n\n  particle.position.x += distance * Math.cos(particle.wobbleAngle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobbleAngle));\n}\n\nvar WobbleUpdater = /*#__PURE__*/function () {\n  function WobbleUpdater() {\n    _classCallCheck(this, WobbleUpdater);\n  }\n\n  _createClass(WobbleUpdater, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var rotate = particle.options.rotate;\n      var rotateAnimation = rotate.animation;\n      return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateWobble(particle, delta);\n    }\n  }]);\n\n  return WobbleUpdater;\n}();\n\nexports.WobbleUpdater = WobbleUpdater;","map":{"version":3,"sources":["H:/sss/React/portfolio/material-ui-portfolio-master/node_modules/tsparticles/Updaters/Wobble/WobbleUpdater.js"],"names":["Object","defineProperty","exports","value","WobbleUpdater","updateWobble","particle","delta","wobble","options","speed","wobbleSpeed","factor","distance","wobbleDistance","max","Math","PI","enable","wobbleAngle","position","x","cos","y","abs","sin","rotate","rotateAnimation","animation","destroyed","spawning","path","isEnabled"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,KAAhC,EAAuC;AACnC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,OAAT,CAAiBD,MAAhC;AACA,MAAME,KAAK,GAAGJ,QAAQ,CAACK,WAAT,GAAuBJ,KAAK,CAACK,MAA3C;AACA,MAAMC,QAAQ,GAAIP,QAAQ,CAACQ,cAAT,GAA0BP,KAAK,CAACK,MAAjC,IAA4C,OAAO,EAAnD,CAAjB;AACA,MAAMG,GAAG,GAAG,IAAIC,IAAI,CAACC,EAArB;;AACA,MAAI,CAACT,MAAM,CAACU,MAAZ,EAAoB;AAChB;AACH;;AACDZ,EAAAA,QAAQ,CAACa,WAAT,IAAwBT,KAAxB;;AACA,MAAIJ,QAAQ,CAACa,WAAT,GAAuBJ,GAA3B,EAAgC;AAC5BT,IAAAA,QAAQ,CAACa,WAAT,IAAwBJ,GAAxB;AACH;;AACDT,EAAAA,QAAQ,CAACc,QAAT,CAAkBC,CAAlB,IAAuBR,QAAQ,GAAGG,IAAI,CAACM,GAAL,CAAShB,QAAQ,CAACa,WAAlB,CAAlC;AACAb,EAAAA,QAAQ,CAACc,QAAT,CAAkBG,CAAlB,IAAuBV,QAAQ,GAAGG,IAAI,CAACQ,GAAL,CAASR,IAAI,CAACS,GAAL,CAASnB,QAAQ,CAACa,WAAlB,CAAT,CAAlC;AACH;;IACKf,a;;;;;;;8BACQE,Q,EAAU;AAChB,UAAMoB,MAAM,GAAGpB,QAAQ,CAACG,OAAT,CAAiBiB,MAAhC;AACA,UAAMC,eAAe,GAAGD,MAAM,CAACE,SAA/B;AACA,aAAO,CAACtB,QAAQ,CAACuB,SAAV,IAAuB,CAACvB,QAAQ,CAACwB,QAAjC,IAA6C,CAACJ,MAAM,CAACK,IAArD,IAA6DJ,eAAe,CAACT,MAApF;AACH;;;2BACMZ,Q,EAAUC,K,EAAO;AACpB,UAAI,CAAC,KAAKyB,SAAL,CAAe1B,QAAf,CAAL,EAA+B;AAC3B;AACH;;AACDD,MAAAA,YAAY,CAACC,QAAD,EAAWC,KAAX,CAAZ;AACH;;;;;;AAELL,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WobbleUpdater = void 0;\r\nfunction updateWobble(particle, delta) {\r\n    const wobble = particle.options.wobble;\r\n    const speed = particle.wobbleSpeed * delta.factor;\r\n    const distance = (particle.wobbleDistance * delta.factor) / (1000 / 60);\r\n    const max = 2 * Math.PI;\r\n    if (!wobble.enable) {\r\n        return;\r\n    }\r\n    particle.wobbleAngle += speed;\r\n    if (particle.wobbleAngle > max) {\r\n        particle.wobbleAngle -= max;\r\n    }\r\n    particle.position.x += distance * Math.cos(particle.wobbleAngle);\r\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobbleAngle));\r\n}\r\nclass WobbleUpdater {\r\n    isEnabled(particle) {\r\n        const rotate = particle.options.rotate;\r\n        const rotateAnimation = rotate.animation;\r\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\r\n    }\r\n    update(particle, delta) {\r\n        if (!this.isEnabled(particle)) {\r\n            return;\r\n        }\r\n        updateWobble(particle, delta);\r\n    }\r\n}\r\nexports.WobbleUpdater = WobbleUpdater;\r\n"]},"metadata":{},"sourceType":"script"}